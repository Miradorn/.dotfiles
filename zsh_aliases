# ----------------
# common
# ----------------
alias l="ls -lah --color"
alias ls='gls --color=tty'
alias e='exa --long --header --git --all'
alias et='exa --tree --long'
alias ping=prettyping
alias kraken='open -a "GitKraken" --args -p $(pwd)'

# ----------------
# tmux
# ----------------
alias ta="tmux attach -d -t"
alias tp='tmuxp load'

# ----------------
# vi
# ----------------
alias vi=nvim
alias vim=nvim

# ----------------
# git
# ----------------
alias gitsh="gitsh --git $(which hub)"

# ----------------
# docker
# ----------------
function dsel {
  docker container ls --all | fzf --header-lines=1 --query "${1}" --multi | awk '{ print $1 }'
}

# localhost for lazy docker people
function dopen {
  # get and count all published port mappings
  published=$(docker container ls | fzf --header-lines=1 --query "${1}" | awk '{print $1}' | xargs docker container port)

  # choose published port; will autochoose if there's only one port; will exit if there are none
  port=$(echo "${published}" | fzf --exit-0 --select-1 | grep -oE '(\d+)$')

  [ -n "${port}" ] && open "http://localhost:${port}"
}

# docker shell
function dsh {
  ID=$(docker container ls | fzf --header-lines=1 --query "${1}" | awk '{print $1}')
  docker exec -it "${ID}" /bin/sh
}

# ----------------
# Kubernetes
# ----------------
# select pod and get its ID
function ksel {
  kubectl get pods --all-namespaces | fzf --header-lines=1 --query "${1}" | awk '{ print $2,"--namespace " $1 }'
}

# Run shell on pod which remians to be selected
function kpsh {
  keti $(ksel) sh
}

# Get logs off pod which remians to be selected
function kplog {
  kubectl logs -f $(ksel)
}

# ----------------
# ruby
# ----------------
alias bil="bi --local"
alias pry='/usr/local/Cellar/rbenv/1.1.1/shims/pry'
alias pryr='pry -r ./config/environment'

# ----------------
# puma-dev
# ----------------
alias pd="puma-dev link"
alias pdl="tail -f ~/Library/Logs/puma-dev.log"

# ----------------
# other
# ----------------
alias wetter="curl wttr.in/hamburg"
alias drops=ds
alias ag="ag --hidden"

function update {
  bubu
  upgrade_oh_my_zsh
  gem update --system
  gem update neovim coderay pry awesome-print byebug pry-byebug html2haml rubocop haml_lint scss_lint
  pip3 freeze --local | grep -v '^\-e' | cut -d = -f 1  | xargs -n1 pip3 install -U
  pip freeze --local | grep -v '^\-e' | cut -d = -f 1  | xargs -n1 pip install -U
  yarn global upgrade
  gcloud components update --quiet
}
