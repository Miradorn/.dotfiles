return {
  -- {
  --   "jose-elias-alvarez/null-ls.nvim",
  --   event = "BufReadPre",
  --   dependencies = { "mason.nvim" },
  --   opts = function()
  --     local nls = require("null-ls")
  --     local b = nls.builtins
  --     local eslint_condition = function(utils)
  --       return utils.root_has_file({
  --         ".eslintrc.js",
  --         ".eslintrc.cjs",
  --         ".eslintrc.yaml",
  --         ".eslintrc.yml",
  --         ".eslintrc.json",
  --       })
  --     end
  --
  --     return {
  --       default_timeout = 15000,
  --       sources = {
  --         -- nls.builtins.formatting.prettierd,
  --         b.code_actions.eslint_d.with({
  --           condition = eslint_condition,
  --           extra_filetypes = { "graphql" },
  --         }),
  --         b.code_actions.shellcheck,
  --         b.diagnostics.alex,
  --         -- b.diagnostics.credo,
  --         b.diagnostics.eslint_d.with({
  --           condition = eslint_condition,
  --           extra_filetypes = { "graphql" },
  --         }),
  --         b.diagnostics.gitlint,
  --         b.diagnostics.hadolint,
  --         b.diagnostics.markdownlint,
  --         b.diagnostics.rubocop,
  --         -- b.diagnostics.shellcheck.with({ diagnostics_format = "#{m} [#{c}]" }),
  --         b.diagnostics.stylelint,
  --         b.diagnostics.yamllint,
  --         b.formatting.eslint_d.with({
  --           condition = eslint_condition,
  --           extra_filetypes = { "graphql" },
  --         }),
  --         b.formatting.fixjson,
  --         -- b.formatting.gofumpt,
  --         -- b.formatting.goimports,
  --         b.formatting.markdownlint,
  --         -- b.formatting.mix.with({ extra_filetypes = { 'elixir', 'eelixir', 'heex' } }),
  --         b.formatting.prettier,
  --         b.formatting.rubocop,
  --         b.formatting.shfmt,
  --         b.formatting.stylelint,
  --         b.formatting.stylua,
  --         -- b.formatting.terraform_fmt,
  --       },
  --     }
  --   end,
  -- },
}
